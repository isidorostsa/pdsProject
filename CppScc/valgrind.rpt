==839838== Memcheck, a memory error detector
==839838== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==839838== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==839838== Command: ./colorSCC ../matrices/uk-2002/uk-2002.mtx
==839838== Parent PID: 775942
==839838== 
==839838== Warning: set address range perms: large range [0x59c87040, 0xe7ef4750) (undefined)
==839838== Invalid read of size 8
==839838==    at 0x10DF49: loadFileToCSR(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Sparse_matrix&) (sparse_util.cpp:129)
==839838==    by 0x10A8F6: main (main.cpp:43)
==839838==  Address 0x51d2038 is 8 bytes before a block of size 148,163,896 alloc'd
==839838==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==839838==    by 0x10E85E: allocate (new_allocator.h:127)
==839838==    by 0x10E85E: allocate (allocator.h:185)
==839838==    by 0x10E85E: allocate (alloc_traits.h:464)
==839838==    by 0x10E85E: _M_allocate (stl_vector.h:346)
==839838==    by 0x10E85E: std::vector<unsigned long, std::allocator<unsigned long> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, unsigned long const&) (vector.tcc:561)
==839838==    by 0x10E059: resize (stl_vector.h:960)
==839838==    by 0x10E059: loadFileToCSR(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Sparse_matrix&) (sparse_util.cpp:103)
==839838==    by 0x10A8F6: main (main.cpp:43)
==839838== 
==839838== 
==839838== Process terminating with default action of signal 2 (SIGINT)
==839838==    at 0x4B4F2DB: futex_wait (futex-internal.h:146)
==839838==    by 0x4B4F2DB: __lll_lock_wait_private (lowlevellock.c:34)
==839838==    by 0x4B239AF: __vfscanf_internal (vfscanf-internal.c:372)
==839838==    by 0x4B2029C: __isoc99_fscanf (isoc99_fscanf.c:30)
==839838==    by 0x10DF1A: loadFileToCSR(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Sparse_matrix&) (sparse_util.cpp:126)
==839838==    by 0x10A8F6: main (main.cpp:43)
==839838== 
==839838== HEAP SUMMARY:
==839838==     in use at exit: 2,533,152,352 bytes in 8 blocks
==839838==   total heap usage: 8 allocs, 0 frees, 2,533,152,352 bytes allocated
==839838== 
==839838== LEAK SUMMARY:
==839838==    definitely lost: 0 bytes in 0 blocks
==839838==    indirectly lost: 0 bytes in 0 blocks
==839838==      possibly lost: 0 bytes in 0 blocks
==839838==    still reachable: 2,533,152,352 bytes in 8 blocks
==839838==         suppressed: 0 bytes in 0 blocks
==839838== Reachable blocks (those to which a pointer was found) are not shown.
==839838== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==839838== 
==839838== For lists of detected and suppressed errors, rerun with: -s
==839838== ERROR SUMMARY: 1028922 errors from 1 contexts (suppressed: 0 from 0)
